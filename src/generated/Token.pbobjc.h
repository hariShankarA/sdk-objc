// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: token.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AccessToken_Payload;
@class AccessToken_Resource;
@class AccessToken_Resource_Account;
@class AccessToken_Resource_Address;
@class AccessToken_Resource_Transaction;
@class DoubleRange;
@class PaymentToken_Payload;
@class Signature;
@class TimePeriod;
@class TokenMember;
@class TokenSignature;
@class Transfer;
@class Var;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum TokenSignature_Action

/// List of valid actions that one can perform on the Token. We use lowercase string value
/// of the action when computing a signature.
typedef GPB_ENUM(TokenSignature_Action) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  TokenSignature_Action_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  TokenSignature_Action_Invalid = 0,

  /// Endorses token. Both payer and payer bank co-endorse the token.
  TokenSignature_Action_Endorsed = 1,

  /// Revoked by the payer or declined by the redeemer.
  TokenSignature_Action_Cancelled = 2,
};

GPBEnumDescriptor *TokenSignature_Action_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL TokenSignature_Action_IsValidValue(int32_t value);

#pragma mark - TokenRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface TokenRoot : GPBRootObject
@end

#pragma mark - TokenSignature

typedef GPB_ENUM(TokenSignature_FieldNumber) {
  TokenSignature_FieldNumber_Action = 1,
  TokenSignature_FieldNumber_Signature = 2,
};

@interface TokenSignature : GPBMessage

@property(nonatomic, readwrite) TokenSignature_Action action;

@property(nonatomic, readwrite, strong, null_resettable) Signature *signature;
/// Test to see if @c signature has been set.
@property(nonatomic, readwrite) BOOL hasSignature;

@end

/// Fetches the raw value of a @c TokenSignature's @c action property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t TokenSignature_Action_RawValue(TokenSignature *message);
/// Sets the raw value of an @c TokenSignature's @c action property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetTokenSignature_Action_RawValue(TokenSignature *message, int32_t value);

#pragma mark - TokenMember

typedef GPB_ENUM(TokenMember_FieldNumber) {
  TokenMember_FieldNumber_Id_p = 1,
  TokenMember_FieldNumber_Alias = 2,
  TokenMember_FieldNumber_Name = 3,
};

@interface TokenMember : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - PaymentToken

typedef GPB_ENUM(PaymentToken_FieldNumber) {
  PaymentToken_FieldNumber_Id_p = 1,
  PaymentToken_FieldNumber_Payload = 2,
  PaymentToken_FieldNumber_PayloadSignaturesArray = 3,
};

@interface PaymentToken : GPBMessage

/// Computed as sha(token).
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/// PaymentToken.Payload.
@property(nonatomic, readwrite, strong, null_resettable) PaymentToken_Payload *payload;
/// Test to see if @c payload has been set.
@property(nonatomic, readwrite) BOOL hasPayload;

/// Payload signatures.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TokenSignature*> *payloadSignaturesArray;
/// The number of items in @c payloadSignaturesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger payloadSignaturesArray_Count;

@end

#pragma mark - PaymentToken_Payload

typedef GPB_ENUM(PaymentToken_Payload_FieldNumber) {
  PaymentToken_Payload_FieldNumber_Version = 1,
  PaymentToken_Payload_FieldNumber_Nonce = 2,
  PaymentToken_Payload_FieldNumber_Issuer = 3,
  PaymentToken_Payload_FieldNumber_Payer = 4,
  PaymentToken_Payload_FieldNumber_Redeemer = 5,
  PaymentToken_Payload_FieldNumber_Transfer = 6,
  PaymentToken_Payload_FieldNumber_FeesPaidBy = 7,
  PaymentToken_Payload_FieldNumber_Currency = 8,
  PaymentToken_Payload_FieldNumber_LifetimeAmount = 9,
  PaymentToken_Payload_FieldNumber_Amount = 10,
  PaymentToken_Payload_FieldNumber_EffectiveAtMs = 11,
  PaymentToken_Payload_FieldNumber_ExpiresAtMs = 12,
  PaymentToken_Payload_FieldNumber_Description_p = 13,
  PaymentToken_Payload_FieldNumber_Vars = 14,
};

@interface PaymentToken_Payload : GPBMessage

/// 1.0
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/// nonce, random string used to de-dupe tokens, set by client.
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

/// Token issuer, bank.
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *issuer;
/// Test to see if @c issuer has been set.
@property(nonatomic, readwrite) BOOL hasIssuer;

/// Payer member.
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *payer;
/// Test to see if @c payer has been set.
@property(nonatomic, readwrite) BOOL hasPayer;

/// Redeemer member.
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *redeemer;
/// Test to see if @c redeemer has been set.
@property(nonatomic, readwrite) BOOL hasRedeemer;

/// Transfer instructions.
@property(nonatomic, readwrite, strong, null_resettable) Transfer *transfer;
/// Test to see if @c transfer has been set.
@property(nonatomic, readwrite) BOOL hasTransfer;

/// Payer or redeemer member id.
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *feesPaidBy;
/// Test to see if @c feesPaidBy has been set.
@property(nonatomic, readwrite) BOOL hasFeesPaidBy;

/// Optional: ISO4217, 3 letter currency code such as "USD" or "EUR".
@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

/// Optional: Token total lifetime amount. Double.
@property(nonatomic, readwrite, copy, null_resettable) NSString *lifetimeAmount;

/// Optional: Single token charge request acceptable range. Double.
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/// Optional
@property(nonatomic, readwrite) int64_t effectiveAtMs;

/// Optional
@property(nonatomic, readwrite) int64_t expiresAtMs;

/// Optional
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/// Optional: token variables.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, Var*> *vars;
/// The number of items in @c vars without causing the array to be created.
@property(nonatomic, readonly) NSUInteger vars_Count;

@end

#pragma mark - Var

typedef GPB_ENUM(Var_FieldNumber) {
  Var_FieldNumber_Range = 1,
  Var_FieldNumber_OneOfArray = 2,
  Var_FieldNumber_Regex = 3,
  Var_FieldNumber_Value = 4,
  Var_FieldNumber_Period = 5,
};

/// Describes a single variable value. Only one of the fields is set.
@interface Var : GPBMessage

/// Used to represent amount range.
@property(nonatomic, readwrite, strong, null_resettable) DoubleRange *range;
/// Test to see if @c range has been set.
@property(nonatomic, readwrite) BOOL hasRange;

/// An array of strings a value must belong to.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *oneOfArray;
/// The number of items in @c oneOfArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger oneOfArray_Count;

/// Regex match.
@property(nonatomic, readwrite, copy, null_resettable) NSString *regex;

/// Plain string value.
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/// Amount per time period.
@property(nonatomic, readwrite, strong, null_resettable) TimePeriod *period;
/// Test to see if @c period has been set.
@property(nonatomic, readwrite) BOOL hasPeriod;

@end

#pragma mark - DoubleRange

typedef GPB_ENUM(DoubleRange_FieldNumber) {
  DoubleRange_FieldNumber_Min = 1,
  DoubleRange_FieldNumber_Max = 2,
  DoubleRange_FieldNumber_Default_p = 3,
};

/// A range of a double value, used for amounts. The doubles are sent as strings over the wire.
@interface DoubleRange : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *min;

@property(nonatomic, readwrite, copy, null_resettable) NSString *max;

@property(nonatomic, readwrite, copy, null_resettable) NSString *default_p;

@end

#pragma mark - TimePeriod

typedef GPB_ENUM(TimePeriod_FieldNumber) {
  TimePeriod_FieldNumber_Duration = 1,
  TimePeriod_FieldNumber_Max = 2,
};

/// Time period description for multi use payment tokens.
@interface TimePeriod : GPBMessage

/// ISO8601 duration. E.g.: P1M for 1 month.
@property(nonatomic, readwrite, copy, null_resettable) NSString *duration;

/// Max amount for the given duration.
@property(nonatomic, readwrite, copy, null_resettable) NSString *max;

@end

#pragma mark - AccessToken

typedef GPB_ENUM(AccessToken_FieldNumber) {
  AccessToken_FieldNumber_Id_p = 1,
  AccessToken_FieldNumber_Payload = 2,
  AccessToken_FieldNumber_PayloadSignaturesArray = 3,
};

@interface AccessToken : GPBMessage

/// Computed as sha(token).
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/// PaymentToken.Payload.
@property(nonatomic, readwrite, strong, null_resettable) AccessToken_Payload *payload;
/// Test to see if @c payload has been set.
@property(nonatomic, readwrite) BOOL hasPayload;

/// Payload signature.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TokenSignature*> *payloadSignaturesArray;
/// The number of items in @c payloadSignaturesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger payloadSignaturesArray_Count;

@end

#pragma mark - AccessToken_Payload

typedef GPB_ENUM(AccessToken_Payload_FieldNumber) {
  AccessToken_Payload_FieldNumber_Version = 1,
  AccessToken_Payload_FieldNumber_Nonce = 2,
  AccessToken_Payload_FieldNumber_Grantor = 3,
  AccessToken_Payload_FieldNumber_Grantee = 4,
  AccessToken_Payload_FieldNumber_ResourcesArray = 5,
  AccessToken_Payload_FieldNumber_EffectiveAtMs = 6,
  AccessToken_Payload_FieldNumber_ExpiresAtMs = 7,
  AccessToken_Payload_FieldNumber_Description_p = 8,
};

@interface AccessToken_Payload : GPBMessage

/// 1.0
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/// nonce, random string used to de-dupe tokens, set by client.
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

/// member_id/optional[FriendlyName]
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *grantor;
/// Test to see if @c grantor has been set.
@property(nonatomic, readwrite) BOOL hasGrantor;

/// member_id/optional[FriendlyName]
@property(nonatomic, readwrite, strong, null_resettable) TokenMember *grantee;
/// Test to see if @c grantee has been set.
@property(nonatomic, readwrite) BOOL hasGrantee;

/// Each entry defines an resources level
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AccessToken_Resource*> *resourcesArray;
/// The number of items in @c resourcesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger resourcesArray_Count;

/// Optional
@property(nonatomic, readwrite) int64_t effectiveAtMs;

/// Optional
@property(nonatomic, readwrite) int64_t expiresAtMs;

/// Optional
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

#pragma mark - AccessToken_Resource

typedef GPB_ENUM(AccessToken_Resource_FieldNumber) {
  AccessToken_Resource_FieldNumber_Address = 1,
  AccessToken_Resource_FieldNumber_Account = 2,
  AccessToken_Resource_FieldNumber_Transaction = 3,
};

typedef GPB_ENUM(AccessToken_Resource_Resource_OneOfCase) {
  AccessToken_Resource_Resource_OneOfCase_GPBUnsetOneOfCase = 0,
  AccessToken_Resource_Resource_OneOfCase_Address = 1,
  AccessToken_Resource_Resource_OneOfCase_Account = 2,
  AccessToken_Resource_Resource_OneOfCase_Transaction = 3,
};

@interface AccessToken_Resource : GPBMessage

@property(nonatomic, readonly) AccessToken_Resource_Resource_OneOfCase resourceOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) AccessToken_Resource_Address *address;

@property(nonatomic, readwrite, strong, null_resettable) AccessToken_Resource_Account *account;

@property(nonatomic, readwrite, strong, null_resettable) AccessToken_Resource_Transaction *transaction;

@end

/// Clears whatever value was set for the oneof 'resource'.
void AccessToken_Resource_ClearResourceOneOfCase(AccessToken_Resource *message);

#pragma mark - AccessToken_Resource_Address

typedef GPB_ENUM(AccessToken_Resource_Address_FieldNumber) {
  AccessToken_Resource_Address_FieldNumber_AddressId = 1,
};

/// Provides Access to member address information
@interface AccessToken_Resource_Address : GPBMessage

/// Optional
@property(nonatomic, readwrite, copy, null_resettable) NSString *addressId;

@end

#pragma mark - AccessToken_Resource_Account

typedef GPB_ENUM(AccessToken_Resource_Account_FieldNumber) {
  AccessToken_Resource_Account_FieldNumber_AccountId = 1,
};

/// Provides access to member account balance
@interface AccessToken_Resource_Account : GPBMessage

/// Optional
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;

@end

#pragma mark - AccessToken_Resource_Transaction

typedef GPB_ENUM(AccessToken_Resource_Transaction_FieldNumber) {
  AccessToken_Resource_Transaction_FieldNumber_AccountId = 1,
};

/// Provides access to account transactions
@interface AccessToken_Resource_Transaction : GPBMessage

/// Optional
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
