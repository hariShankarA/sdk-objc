syntax = "proto3";
package io.token.proto.common.transfer;

option java_outer_classname = "TransferProtos";

import "money.proto";
import "security.proto";
import "transferinstructions.proto";


enum TransferStatusCode {
  PENDING = 0;
  SUCCESS = 1;
  ERROR = 2;
  FAILED = 3;
}

message TransferStatus {
  TransferStatusCode code = 1;
  string details = 2;  // Optional status details.
}

// A transfer record as persisted on the ledger.
message Transfer {
  string id = 1;                               // Computed as the hash of the transfer payload.
  string reference_id = 2;                     // Bank transaction reference id.
  int64 created_at_ms = 3;
  TransferPayload payload = 4;
  repeated io.token.proto.common.security.Signature payload_signatures = 5;
  TransferStatus status = 6;
}

// A transfer payload that is being signed by the redeemer and the bank.
message TransferPayload {
  string nonce = 1;                                                                  // Client assigned unique request id.
  string token_id = 2;                                                               // Token id.
  io.token.proto.common.money.Money amount = 3;                                      // Amount and currency.
  repeated io.token.proto.common.transferinstructions.Destination destinations = 5;  // Transfer desitinations, sorted in priority order.
  string description = 6;                                                            // Optional
}

