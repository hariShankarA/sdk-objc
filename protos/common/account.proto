syntax = "proto3";

package io.token.proto.common.account;
option java_outer_classname = "AccountProtos";

import "banklink.proto";

// The payload of the bank authorization request. Used for serialization only.
// The value of the payload is encrypted as a serialized JSON object.
message PlaintextBankAuthorization {
  string member_id = 1;
  string account_name = 2;
  BankAccount account = 3;
  int64 expiration_ms = 4;
}

// Optional account tag data.
message AccountTag {
  string key = 1;
  string value = 2;
}

message AccountFeatures {
  bool supports_payment = 1;
  bool supports_information = 2;
}

// Token linked account.
message Account {
  string id = 1;
  string name = 2;
  string bank_id = 3;
  repeated AccountTag tags = 4;
  bool is_locked = 5; // indicates whether account requires re-linking
  AccountFeatures account_features = 6;
}

// Account information as seen by the bank. This is what the end user links with
// the bank and what Token uses when it talks to the bank.
message BankAccount {
  // Token account Destination
  message Token {
    string member_id = 1;
    string account_id = 2;
  }

  // One-time encrypted authorization for an account
  message TokenAuthorization {
    io.token.proto.banklink.BankAuthorization authorization = 1;
  }

  // Source account managed by a coop bank
  message Bank {
    string bank_id = 1;
  }

  // SWIFT transfer
  message Swift {
    string bic = 1;
    string account = 2;
  }

  // SEPA transfer. BIC is optional, except for non EEA countries
  message Sepa {
    string iban = 1;
    string bic = 2;
  }

  // ACH transfer
  message Ach {
    string routing = 1;
    string account = 2;
  }

  oneof account {
    Token token = 1;
    TokenAuthorization token_authorization = 2;
    Swift swift = 3;
    Sepa sepa = 4;
    Ach ach = 5;
    Bank bank = 6;
  }

  map<string, string> metadata = 7;
  AccountFeatures account_features = 8;
}

